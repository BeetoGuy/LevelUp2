buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven {
            //name = "sonatype-nexus-public"
            //url = "https://oss.sonatype.org/content/repositories/public/"
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        //classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
//apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "com.matthewprenger.cursegradle"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    //maven {
        //name = 'sonatype-nexus-public'
        //url = 'https://oss.sonatype.org/content/repositories/public/'
    //}
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven { url "https://repo.spongepowered.org/maven"}
}

dependencies {
    compile files('libs/')

    //compile "org.spongepowered:mixin:0.7.10-SNAPSHOT"
    embed("org.spongepowered:mixin:0.8") {transitive = false}
}

//Fix forges AT breaking everything because the AT checker is stupid
[tasks.deobfMcMCP, tasks.deobfMcSRG].each { it.failOnAtError = false }

jar{
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes(
                "FMLAT": 'lu_at.cfg',
                "FMLCorePluginContainsFMLMod": true,
                'ForceLoadAsMod': true,
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                'TweakOrder': 0,
                "FMLCorePlugin": "levelup2.core.LevelUpCore",
                "MixinConfigs": "levelup2.mixins.json"
        )
    }
}

//shadowJar {
//    mainSpec.sourcePaths.clear()
//    dependsOn reobfJar
//    classifier 'shaded'
//    exclude 'dummyThing'
//    exclude 'MixinBootstrap-1.0.2.jar'
//    exclude 'FastFurnace-1.12.2-1.3.1-dev.jar'
//    dependencies {
//        include dependency('org.spongepowered:mixin')
//    }
//    afterEvaluate {
//        from zipTree(reobfJar.jar)
//    }
//}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier "dev"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives sourcesJar
}

mixin {
    add sourceSets.main, "mixins.levelup2.refmap.json"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
